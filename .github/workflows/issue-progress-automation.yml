name: Issue Progress Automation

on:
  issues:
    types: [opened, assigned, unassigned]

env:
  # 進捗ラベル定義
  PROGRESS_LABELS: '["todo", "in progress", "review", "done"]'
  # プロジェクトURL
  PROJECT_URL: https://github.com/users/Ojoxux/projects/1
  
jobs:
  manage-issue-progress:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    
    steps:
      - name: Add todo label on issue creation
        if: github.event.action == 'opened'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Issue作成時に自動でtodoラベルを付与
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['todo']
            });
            
            console.log(`✅ Added 'todo' label to issue #${context.issue.number}`);

      - name: Update progress on assignee change
        if: github.event.action == 'assigned'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const progressLabels = JSON.parse(process.env.PROGRESS_LABELS);
            
            // 現在のラベルを取得
            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const currentLabels = issue.labels.map(label => label.name);
            const currentProgressLabels = currentLabels.filter(label => 
              progressLabels.includes(label)
            );
            
            // 既存の進捗ラベルを削除
            for (const label of currentProgressLabels) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: label
              });
              console.log(`🗑️ Removed '${label}' label from issue #${context.issue.number}`);
            }
            
            // 'in progress'ラベルを追加
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['in progress']
            });
            
            console.log(`✅ Added 'in progress' label to issue #${context.issue.number}`);

      - name: Revert to todo on unassign
        if: github.event.action == 'unassigned'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const progressLabels = JSON.parse(process.env.PROGRESS_LABELS);
            
            // 現在のラベルを取得
            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            // アサインされている人がまだいるかチェック
            if (issue.assignees && issue.assignees.length > 0) {
              console.log(`ℹ️ Issue #${context.issue.number} still has assignees, keeping current progress status`);
              return;
            }
            
            const currentLabels = issue.labels.map(label => label.name);
            const currentProgressLabels = currentLabels.filter(label => 
              progressLabels.includes(label)
            );
            
            // 既存の進捗ラベルを削除
            for (const label of currentProgressLabels) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: label
              });
              console.log(`🗑️ Removed '${label}' label from issue #${context.issue.number}`);
            }
            
            // 'todo'ラベルを追加
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['todo']
            });
            
            console.log(`✅ Added 'todo' label to issue #${context.issue.number} (no assignees)`);

  # プロジェクトステータス同期
  update-project-status:
    runs-on: ubuntu-latest
    needs: manage-issue-progress
    if: github.event.action == 'assigned' || github.event.action == 'unassigned'
    steps:
      - name: Get Project Item ID
        id: get-item
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PROJECT_PAT }}
          script: |
            const query = `
              query($owner: String!, $repo: String!, $issue_number: Int!) {
                repository(owner: $owner, name: $repo) {
                  issue(number: $issue_number) {
                    projectItems(first: 10) {
                      nodes {
                        id
                        project { id title }
                      }
                    }
                  }
                }
              }
            `;
            const variables = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            };
            const result = await github.graphql(query, variables);
            const projectItems = result.repository.issue.projectItems.nodes;
            if (projectItems.length > 0) {
              return projectItems[0].id;
            }
            return null;

      - name: Update Project Status
        if: steps.get-item.outputs.result
        uses: titoportas/update-project-fields@v0.1.0
        with:
          project-url: ${{ env.PROJECT_URL }}
          github-token: ${{ secrets.PROJECT_PAT }}
          item-id: ${{ steps.get-item.outputs.result }}
          field-keys: Status
          field-values: |
            ${{
              github.event.action == 'assigned' && '🚧 進行中' ||
              github.event.action == 'unassigned' && '📝 やること（TODO）' ||
              '📝 やること（TODO）'
            }} 